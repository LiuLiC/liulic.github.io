{"meta":{"title":"LiuLiC's Note","subtitle":null,"description":null,"author":"LiuLiC","url":"http://liulic.github.io"},"pages":[{"title":"categories","date":"2017-08-18T07:41:56.000Z","updated":"2017-08-18T07:43:12.000Z","comments":true,"path":"categories/index.html","permalink":"http://liulic.github.io/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2017-08-18T07:41:31.000Z","updated":"2017-08-18T07:42:46.000Z","comments":true,"path":"tags/index.html","permalink":"http://liulic.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Hexo博客搭建教程","slug":"Hexo博客搭建教程","date":"2017-08-18T04:15:50.000Z","updated":"2017-08-18T06:47:25.000Z","comments":true,"path":"2017/08/18/Hexo博客搭建教程/","link":"","permalink":"http://liulic.github.io/2017/08/18/Hexo博客搭建教程/","excerpt":"最近在放暑假，想想很快就要开学，之后自己的身份就是计算机专业的学生了，也许应该弄一个东西纪念或者mark一下，于是便萌生了搭建一个Hexo博客的想法。虽然网上有蛮多图文并茂的教程，但在搭建过程中还是遇到了一些问题，在这里记录下来解决的方法，以防之后再遇到，顺便也能帮助更多的人做想做的事。","text":"最近在放暑假，想想很快就要开学，之后自己的身份就是计算机专业的学生了，也许应该弄一个东西纪念或者mark一下，于是便萌生了搭建一个Hexo博客的想法。虽然网上有蛮多图文并茂的教程，但在搭建过程中还是遇到了一些问题，在这里记录下来解决的方法，以防之后再遇到，顺便也能帮助更多的人做想做的事。 本文是在 Mac OS 下搭建的，如果各位是 Windows 或者 Linux 的话，大的步骤应该是一样的，可能 Windows 中使用 cmd 命令行会出现一些问题，建议使用 Git Bash。文中主要参考Hexo的官方文档。 安装前提 在安装Hexo之前，需要先安装下列的应用程序： Node.js Git 如果已经有上述的应用程序的话，可以直接跳到下面安装Hexo。 Git我是之前安装了 GitHub Desktop，在Preferences --&gt; Install Command Line Tools里安装，当然你也可以直接 1$ brew install git Node.js可以直接从官网下载,像安装普通的软件一样安装。完毕后可以在终端输入 12$ node -v$ npm -v 出现版本号则说明安装成功。 安装Hexo 使用 npm 安装 Hexo 非常简单 1$ npm install -g hexo-cli 完毕后在终端输入hexo -v，出现版本号则说明安装成功 Trouble shooting在上述安装Hexo的过程中，可能会看到以下关于dtrace-provider的报错： 12Building dtrace-provider failed with exit code 1 and signal 0re-run install with environment variable V set to see the build output 或者在输入hexo -v后看到类似于： 1234567891011121314151617181920212223242526272829&#123; Error: Cannot find module &apos;./build/Release/DTraceProviderBindings&apos; at Function.Module._resolveFilename (module.js:469:15) at Function.Module._load (module.js:417:25) at Module.require (module.js:497:17) at require (internal/module.js:20:19) at Object.&lt;anonymous&gt; (/usr/local/lib/node_modules/hexo-cli/node_modules/dtrace-provider/dtrace-provider.js:17:23) at Module._compile (module.js:570:32) at Object.Module._extensions..js (module.js:579:10) at Module.load (module.js:487:32) at tryModuleLoad (module.js:446:12) at Function.Module._load (module.js:438:3) at Module.require (module.js:497:17) at require (internal/module.js:20:19) at Object.&lt;anonymous&gt; (/usr/local/lib/node_modules/hexo-cli/node_modules/bunyan/lib/bunyan.js:79:18) at Module._compile (module.js:570:32) at Object.Module._extensions..js (module.js:579:10) at Module.load (module.js:487:32) code: &apos;MODULE_NOT_FOUND&apos; &#125; exo: 3.3.8hexo-cli: 1.0.3os: Darwin 16.7.0 darwin x64http_parser: 2.7.0node: 6.11.2v8: 5.1.281.103uv: 1.11.0zlib: 1.2.11ares: 1.10.1-DEVicu: 58.2modules: 48openssl: 1.0.2l 应该算是一个不影响正常使用的Warning，但强迫症表示不能忍，于是在hexo的issue#1922中找到了解决方案： 123$ sudo npm uninstall hexo-cli -g$ sudo npm uninstall dtrace-provider -g$ sudo npm install hexo-cli -g --no-optional 建站 安装完 Hexo 后，执行下面的命令，Hexo 会在指定的文件夹中新建所需要的文件。 123$ hexo init &lt;你指定的文件夹&gt;$ cd &lt;你指定的文件夹&gt;$ npm install 新建完成后，指定文件夹下的目录如下： 12345678.├── _config.yml├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── themes 到这里Hexo在本机的配置快差不多了，输入 12$ hexo g$ hexo s 会看到提示 1INFO Hexo is running at http://localhost:4000/. Press Ctrl+C to stop. 在浏览器中打开 http://localhost:4000/ 就可以看到经典了 Hello World 了。但此时我们的网站别人是无法看到的，为此，我们还需要配置一个 GitHub Page。 配置GitHub Page首先你需要一个GitHub的账号，没有的话请先注册，并且新注册的账号要去邮箱里确认GitHub发给你的注册确认信。 用刚刚注册的账号登陆GitHub，在页面的右上角找到一个加号，点击选择New repository，接着在Repository name中填写yourname.github.io，Description(optional)可写可不写，把Initialize this repository with a REAEMD钩上，因为空的目录好像无法初始化为GitHub Page。点击Create repository。 现在GitHub貌似检测到xxx.github.io这样的目录就会自动生成GitHub Page。几分钟之后就可以登陆刚刚的yourname.github.io看看是否可以正常访问。 修改Hexo配置文件首先需要配置自己的身份信息，在命令行输入： 12$ git config --global user.name \"yourname\"$ git config --global user.email \"youremail\" 为了使用git方式部署，需要在命令行输入： 1$ npm install hexo-deployer-git --save 找到刚刚你指定的目录下的_config.yml文件，找到Deployment部分，修改成如下： 1234deploy: type: git repo: git@github.com:yourname/yourname.github.io.git branch: master 之后命令行输入： 1$ hexo d 按照提示分别输入GitHub账户名和密码（输入密码的时候是不会显示*的）开始上传。之后就可以在浏览器中访问yourname.github.io就可以看到Hexo的标题了，至此，搭建就大功告成了。","categories":[],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://liulic.github.io/tags/Hexo/"}]},{"title":"Hello World","slug":"hello-world","date":"2017-08-16T14:28:25.000Z","updated":"2017-08-17T11:16:15.000Z","comments":true,"path":"2017/08/16/hello-world/","link":"","permalink":"http://liulic.github.io/2017/08/16/hello-world/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}